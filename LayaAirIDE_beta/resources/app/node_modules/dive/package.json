{
  "_args": [
    [
      {
        "raw": "dive",
        "scope": null,
        "escapedName": "dive",
        "name": "dive",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "E:\\Mine\\Project\\git\\laya\\dawawa\\layaairide_dev\\resources\\app"
    ]
  ],
  "_from": "dive@latest",
  "_id": "dive@0.5.0",
  "_inCache": true,
  "_location": "/dive",
  "_nodeVersion": "4.0.0",
  "_npmUser": {
    "name": "pvorb",
    "email": "paul@vorba.ch"
  },
  "_npmVersion": "2.14.2",
  "_phantomChildren": {},
  "_requested": {
    "raw": "dive",
    "scope": null,
    "escapedName": "dive",
    "name": "dive",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/dive/-/dive-0.5.0.tgz",
  "_shasum": "06d0e07edd25da849598bacab44d51f2809bec47",
  "_shrinkwrap": null,
  "_spec": "dive",
  "_where": "E:\\Mine\\Project\\git\\laya\\dawawa\\layaairide_dev\\resources\\app",
  "author": {
    "name": "Paul Vorbach",
    "email": "paul@vorba.ch",
    "url": "http://vorba.ch/"
  },
  "bugs": {
    "url": "http://github.com/pvorb/node-dive/issues"
  },
  "contributors": [
    {
      "name": "Jasper Palfree",
      "url": "https://github.com/wellcaffeinated"
    },
    {
      "name": "Jan Mühlemann",
      "url": "https://github.com/jamuhl"
    },
    {
      "name": "Axel Hecht",
      "email": "axel@pike.org",
      "url": "http://blog.mozilla.com/axel/"
    },
    {
      "name": "Jimb Esser",
      "url": "https://github.com/Jimbly"
    },
    {
      "name": "Zoltan",
      "url": "https://github.com/tssajo"
    },
    {
      "name": "Manoj Patel",
      "email": "mapatel@microsoft.com",
      "url": "https://github.com/nojvek"
    },
    {
      "name": "Mathias Pettersson",
      "url": "https://github.com/mape"
    }
  ],
  "dependencies": {},
  "description": "walk through directory trees and apply an action to every file",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "06d0e07edd25da849598bacab44d51f2809bec47",
    "tarball": "https://registry.npmjs.org/dive/-/dive-0.5.0.tgz"
  },
  "engines": {
    "node": ">= 0.4.0"
  },
  "gitHead": "0827eadb8a35b7c7c578a37cf8620e7df16529fc",
  "homepage": "https://github.com/pvorb/node-dive#readme",
  "main": "dive.js",
  "maintainers": [
    {
      "name": "pvorb",
      "email": "paul@vorb.de"
    }
  ],
  "name": "dive",
  "optionalDependencies": {},
  "readme": "# dive\n\na tiny module for node that is able to recursively walk (_“dive”_) a\ndirectory tree. There’s also an synchronous version of dive called\n[diveSync](//github.com/pvorb/node-diveSync).\n\n~~~ javascript\ndive(directory[, options], action[, complete]);\n~~~\n\n*   `directory` is the pathname of a readable directory.\n*   `options` [optional] is an object that defines some of the properties.\n\n    The default options are as follows:\n\n    ~~~ javascript\n    {\n      recursive: true,    // - If set to false, this will ignore subdirectories.\n      all: false,         // - If set to true, this will show \"dot files\" and\n                          //   files in \"dot directories\", e.g. \".gitignore\" or\n                          //  \".git/HEAD\".\n      directories: false  // - If set to true, this will call `action` on\n                          //   directories, too.\n      files: true         // - If set to false, this won't call `action` on\n                          //   files any more.\n      ignore: false       // - If set to a string or RegExp, all files and\n                          //   directories that match will be ignored.\n    }\n    ~~~\n*   `action` is passed three arguments `(err, file, stat)` where `err` is an\n    error or `null`, `file` is the pathname of a file and `stat` is an\n    [fs.Stats](https://nodejs.org/api/fs.html#fs_class_fs_stats) object.\n*   `complete [optional]` may define a second callback, that is called, when all\n    files have been processed. It takes no arguments.\n\n## Installation\n\n    npm install dive\n\n## Usage\n\nDefault:\n\n~~~ javascript\nvar dive = require('dive');\n\ndive(process.cwd(), function(err, file) {\n\n});\n~~~\n\nAll files and a callback in the end:\n\n~~~ javascript\nvar dive = require('dive');\n\ndive(process.cwd(), { all: true }, function(err, file, stat) {\n  if (err) throw err;\n  console.log(file);\n}, function() {\n  console.log('complete');\n});\n~~~\n\nDirectories only:\n\n~~~ javascript\nvar dive = require('dive');\n\ndive(process.cwd(), { directories: true, files: false }, function(err, dir) {\n  if (err) throw err;\n  console.log(dir);\n});\n~~~\n\n## Bugs and Issues\n\nIf you encounter any bugs or issues, feel free to\n[open an issue at github](//github.com/pvorb/node-dive/issues) or send me an\nemail to <paul@vorba.ch>. I also always like to hear from you, if you’re using my\ncode.\n\n## License\n\n(The MIT License)\n\nCopyright © 2011-2015 Paul Vorbach\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the “Software”), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/pvorb/node-dive.git"
  },
  "scripts": {},
  "tags": [
    "recursive",
    "file walking",
    "directories",
    "async"
  ],
  "version": "0.5.0"
}
